env:
  DOMAIN: &DOMAIN <worker-node-ip>.nip.io
  # Uncomment if you want to use Diego to stage applications
  # ENABLE_OPI_STAGING: false
  UAA_HOST: uaa.<worker-node-ip>.nip.io
  UAA_PORT: 2793

kube:
  auth: rbac
  external_ips: &external_ips
  - <worker-node-ip>
  storage_class:
    persistent: <persistent-storage-class>
    shared: <shared-storage-class>

secrets: &secrets
  CLUSTER_ADMIN_PASSWORD: <cluster-admin-pw>
  UAA_ADMIN_CLIENT_SECRET: <uaa-admin-secret>
  BLOBSTORE_PASSWORD: &BLOBSTORE_PASSWORD "<blobstore-pw>"

services: &services
  loadbalanced: false

eirini:
  env:
    DOMAIN: *DOMAIN
  services: *services
  opi:
    use_registry_ingress: false
    # Enable if use_registry_ingress is set to 'true'
    # ingress_endpoint: kubernetes-cluster-ingress-endpoint

  secrets:
    BLOBSTORE_PASSWORD: *BLOBSTORE_PASSWORD
    BITS_SERVICE_SECRET: &BITS_SERVICE_SECRET "<bits-secret>"
    BITS_SERVICE_SIGNING_USER_PASSWORD: &BITS_SERVICE_SIGNING_USER_PASSWORD  "<bits-user-pw>"

  kube:
    external_ips: *external_ips

bits:
  env:
    DOMAIN: *DOMAIN
  services: *services
  opi:
    use_registry_ingress: false
    # Enable if use_registry_ingress is set to 'true'
    # ingress_endpoint: kubernetes-cluster-ingress-endpoint

  secrets:
    BLOBSTORE_PASSWORD: *BLOBSTORE_PASSWORD
    BITS_SERVICE_SECRET: *BITS_SERVICE_SECRET
    BITS_SERVICE_SIGNING_USER_PASSWORD: *BITS_SERVICE_SIGNING_USER_PASSWORD

  kube:
    external_ips: *external_ips
